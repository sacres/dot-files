#######################################################################
#                           Vagrant, virt*                            #
#######################################################################
# Assumes DATA mount exists. This needs some luv; as does the libvirt vars.
# export VAGRANT_VAGRANTFILE=Vagrantfile.local
# export VAGRANT_DEFAULT_PROVIDER=libvirt
export VAGRANT_HOME=/run/media/$USER/DATA/.vagrant.d

#######################################################################
#                               Python                                #
#######################################################################
# virtualenv mgmt via: https://github.com/yyuu/pyenv
if [ -d ~/.pyenv ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
    export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV=true
    # Python Encoding
    export PYTHONIOENCODING=utf_8
fi

#######################################################################
#           GH Token (Handled elsewhere) w/ enc.		      #
#######################################################################

#######################################################################
#                             Android SDK                             #
#######################################################################
if [ -d /opt/Android ]; then
    export PATH=$PATH:/opt/Android/Sdk/platform-tools
fi

#######################################################################
#                            Atlassian SDK                            #
#######################################################################
if [ -d /opt/atlassian-plugin-sdk ]; then
    PATH=$PATH:$(find /opt/atlassian-plugin-sdk -type d -iname 'bin' -printf ":%p")
fi

#######################################################################
#                             Travis CLI                              #
#######################################################################
if [ -d ~/.travis ]; then
    source ~/.travis/travis.sh
fi

#######################################################################
#                                 GPG                                 #
#######################################################################
alias gpg=gpg2
export GPG_TTY="$(tty)"

#######################################################################
#                                RUBY                                 #
#######################################################################
if [ -d ~/.rbenv ]; then
    export PATH="$HOME/.rbenv/bin:$PATH"
    eval "$(rbenv init -)"
fi

#######################################################################
#                              Powerline                              #
#######################################################################
if [[ "$(type -p powerline-daemon)" ]]; then
  powerline-daemon -q
  POWERLINE_BASH_CONTINUATION=1
  POWERLINE_BASH_SELECT=1
  . /usr/share/powerline/bash/powerline.sh
fi

#######################################################################
#                                 Go                                  #
#######################################################################
if [ -f /usr/bin/go ]; then
  export GOPATH="$HOME/go-work"
  export PATH=$PATH:$GOPATH/bin
fi


#######################################################################
#                              Git Stuff                              #
#######################################################################
if [ -f .gitconfig ]; then
    export GIT_COMMITTER_NAME="$(getent passwd $USER | cut -d ':' -f 5)"
    export GIT_COMMITTER_EMAIL="$( git config --get user.email)"
    export GIT_AUTHOR_NAME="$(getent passwd $USER | cut -d ':' -f 5)"
    export GIT_AUTHOR_EMAIL="$(git config --get user.email)"
    export GITHUB_USER="$(git config --get user.name)"
fi

if [[ "$(type -p hub)" ]]; then
    . "$HOME/bin/hub.bash_completion.sh"
    eval "$(hub alias -s)"
    if [ ! -f "$HOME"/.config/hub ]; then
      gpg2 --quiet --batch --use-agent --decrypt "$HOME"/creds/hub.gpg > "$HOME"/.config/hub
    fi
fi
